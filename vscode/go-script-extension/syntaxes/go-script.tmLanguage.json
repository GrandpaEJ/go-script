{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Go-Script",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#functions"
    },
    {
      "include": "#operators"
    },
    {
      "include": "#types"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.number-sign.go-script",
          "begin": "#",
          "end": "$",
          "patterns": [
            {
              "name": "constant.character.escape.go-script",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.go-script",
          "match": "\\b(if|elif|else|for|while|break|continue|return|defer|go|select|case|default|switch)\\b"
        },
        {
          "name": "keyword.declaration.go-script",
          "match": "\\b(func|struct|interface|var|const|type|package|import|from)\\b"
        },
        {
          "name": "keyword.operator.logical.go-script",
          "match": "\\b(and|or|not|in|range)\\b"
        },
        {
          "name": "constant.language.go-script",
          "match": "\\b(true|false|nil)\\b"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.go-script",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.go-script",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "string.quoted.single.go-script",
          "begin": "'",
          "end": "'",
          "patterns": [
            {
              "name": "constant.character.escape.go-script",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.float.go-script",
          "match": "\\b\\d+\\.\\d+([eE][+-]?\\d+)?\\b"
        },
        {
          "name": "constant.numeric.integer.go-script",
          "match": "\\b\\d+\\b"
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "name": "entity.name.function.go-script",
          "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*(?=\\()"
        },
        {
          "name": "entity.name.function.definition.go-script",
          "begin": "\\b(func)\\s+([a-zA-Z_][a-zA-Z0-9_]*)",
          "beginCaptures": {
            "1": {
              "name": "keyword.declaration.go-script"
            },
            "2": {
              "name": "entity.name.function.go-script"
            }
          },
          "end": ":",
          "patterns": [
            {
              "include": "#parameters"
            }
          ]
        }
      ]
    },
    "parameters": {
      "patterns": [
        {
          "name": "variable.parameter.go-script",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.assignment.go-script",
          "match": ":=|\\+=|-=|\\*=|/=|%=|="
        },
        {
          "name": "keyword.operator.arithmetic.go-script",
          "match": "\\+\\+|--|\\*\\*|\\+|-|\\*|/|%"
        },
        {
          "name": "keyword.operator.comparison.go-script",
          "match": "==|!=|<=|>=|<|>"
        },
        {
          "name": "keyword.operator.logical.go-script",
          "match": "&&|\\|\\||!"
        },
        {
          "name": "keyword.operator.bitwise.go-script",
          "match": "&\\^|<<|>>|&|\\||\\^"
        },
        {
          "name": "keyword.operator.channel.go-script",
          "match": "<-"
        }
      ]
    },
    "types": {
      "patterns": [
        {
          "name": "storage.type.go-script",
          "match": "\\b(int|int8|int16|int32|int64|uint|uint8|uint16|uint32|uint64|float32|float64|complex64|complex128|bool|byte|rune|string|error)\\b"
        },
        {
          "name": "storage.type.composite.go-script",
          "match": "\\b(map|chan|interface)\\b"
        }
      ]
    }
  },
  "scopeName": "source.go-script"
}
